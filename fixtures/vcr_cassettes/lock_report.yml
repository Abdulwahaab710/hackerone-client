---
http_interactions:
- request:
    method: post
    uri: https://api.hackerone.com/v1/reports/200/state_changes
    body:
      encoding: UTF-8
      string: '{"data":{"type":"state-change","attributes":{"state":"resolved","message":""}}}'
    headers:
      Authorization:
      - Basic NOPE=
      User-Agent:
      - Faraday v1.0.1
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 201
      message: Created
    headers:
      Date:
      - Tue, 04 Aug 2020 20:22:57 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=d5217b52e915c7a8c7008d9acee5e37701596572577; expires=Thu, 03-Sep-20
        20:22:57 GMT; path=/; Domain=api.hackerone.com; HttpOnly; SameSite=Lax; Secure
      X-Request-Id:
      - 2667dcb8-451b-4c3c-a3a0-c8a6571cf5ff
      Etag:
      - W/"90fc4eba1716b554d0709bafb6b998ed"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Frame-Options:
      - DENY
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Expect-Ct:
      - enforce, max-age=86400
      Content-Security-Policy:
      - 'default-src ''none''; base-uri ''self''; block-all-mixed-content; child-src
        www.youtube-nocookie.com; connect-src ''self'' www.google-analytics.com errors.hackerone.net;
        font-src ''self''; form-action ''self''; frame-ancestors ''none''; img-src
        ''self'' data: cover-photos.hackerone-user-content.com hackathon-photos.hackerone-user-content.com
        profile-photos.hackerone-user-content.com hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com;
        media-src ''self'' hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com;
        script-src ''self'' www.google-analytics.com; style-src ''self'' ''unsafe-inline'';
        report-uri https://errors.hackerone.net/api/30/csp-report/?sentry_key=61c1e2f50d21487c97a071737701f598'
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Request-Id:
      - 045cbd44e40000934c0c8d6200000001
      Server:
      - cloudflare
      Cf-Ray:
      - 5bdafe4e3b7c934c-SJC
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Tue, 04 Aug 2020 20:22:57 GMT
- request:
    method: put
    uri: https://api.hackerone.com/v1/reports/200/close_comments
    body:
      encoding: UTF-8
      string: '{"data":{"type":"activity-comments-closed"}}'
    headers:
      Authorization:
      - Basic NOPE=
      User-Agent:
      - Faraday v1.0.1
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 04 Aug 2020 20:22:58 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=d2984afa39f16a0fa59898d5a119139eb1596572577; expires=Thu, 03-Sep-20
        20:22:57 GMT; path=/; Domain=api.hackerone.com; HttpOnly; SameSite=Lax; Secure
      X-Request-Id:
      - cfc4b577-2ac0-4466-9018-821da6d76939
      Etag:
      - W/"f008fe54d1f034fdb39ac356b76f029e"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Frame-Options:
      - DENY
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Expect-Ct:
      - enforce, max-age=86400
      Content-Security-Policy:
      - 'default-src ''none''; base-uri ''self''; block-all-mixed-content; child-src
        www.youtube-nocookie.com; connect-src ''self'' www.google-analytics.com errors.hackerone.net;
        font-src ''self''; form-action ''self''; frame-ancestors ''none''; img-src
        ''self'' data: cover-photos.hackerone-user-content.com hackathon-photos.hackerone-user-content.com
        profile-photos.hackerone-user-content.com hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com;
        media-src ''self'' hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com;
        script-src ''self'' www.google-analytics.com; style-src ''self'' ''unsafe-inline'';
        report-uri https://errors.hackerone.net/api/30/csp-report/?sentry_key=61c1e2f50d21487c97a071737701f598'
      Cf-Cache-Status:
      - DYNAMIC
      Cf-Request-Id:
      - 045cbd479000000293bd38e200000001
      Server:
      - cloudflare
      Cf-Ray:
      - 5bdafe528d570293-SJC
    body:
      encoding: ASCII-8BIT
      string: '{"data":{"type":"activity-comments-closed","id":"8848232","attributes":{"message":"","created_at":"2020-08-04T20:22:57.889Z","updated_at":"2020-08-04T20:22:57.889Z","internal":false},"relationships":{"actor":{"data":{"id":"1273903","type":"user","attributes":{"username":"rzhade3-tester","name":null,"disabled":false,"created_at":"2020-08-04T06:26:42.491Z","profile_picture":{"62x62":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png","82x82":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png","110x110":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png","260x260":"/assets/avatars/default-71a302d706457f3d3a31eb30fa3e73e6cf0b1d677b8fa218eaeaffd67ae97918.png"},"signal":null,"impact":null,"reputation":null,"bio":null,"website":null,"location":null,"hackerone_triager":false}}}}}}'
  recorded_at: Tue, 04 Aug 2020 20:22:58 GMT
recorded_with: VCR 6.0.0
