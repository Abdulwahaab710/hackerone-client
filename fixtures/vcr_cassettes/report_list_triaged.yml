---
http_interactions:
- request:
    method: get
    uri: https://api.hackerone.com/v1/reports?filter%5Bcreated_at__gt%5D=2017-02-11T16:00:44-10:00&filter%5Bprogram%5D%5B0%5D=github&filter%5Bstate%5D%5B0%5D=triaged
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Basic NOPE
      User-Agent:
      - Faraday v1.0.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 24 Mar 2020 14:11:47 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=dabd0c152e7e92db1c896d18efb3473911585059107; expires=Thu, 23-Apr-20
        14:11:47 GMT; path=/; Domain=api.hackerone.com; HttpOnly; SameSite=Lax; Secure
      X-Request-Id:
      - 5ead5fa1-86fb-4b8f-ae8b-755d0b08b40c
      Etag:
      - W/"a9d3a797dc03972084547d21d1a4ebcd"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      X-Frame-Options:
      - DENY
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Expect-Ct:
      - enforce, max-age=86400
      Content-Security-Policy:
      - 'default-src ''none''; base-uri ''self''; block-all-mixed-content; child-src
        www.youtube-nocookie.com; connect-src ''self'' www.google-analytics.com errors.hackerone.net;
        font-src ''self''; form-action ''self''; frame-ancestors ''none''; img-src
        ''self'' data: cover-photos.hackerone-user-content.com hackathon-photos.hackerone-user-content.com
        profile-photos.hackerone-user-content.com hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com;
        media-src ''self'' hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com;
        script-src ''self'' www.google-analytics.com; style-src ''self'' ''unsafe-inline'';
        report-uri https://errors.hackerone.net/api/30/csp-report/?sentry_key=61c1e2f50d21487c97a071737701f598'
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 5790fbbbb977e4d8-ATL
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Tue, 24 Mar 2020 14:11:47 GMT
recorded_with: VCR 5.1.0
